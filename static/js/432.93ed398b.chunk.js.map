{"version":3,"file":"static/js/432.93ed398b.chunk.js","mappings":"0PAAaA,EAAc,SAAAC,GACzB,QAAcC,IAAVD,EAGJ,OAAOA,EAAME,SAASA,QACvB,EAEYC,EAAY,SAAAH,GACvB,QAAcC,IAAVD,EAGJ,OAAOA,EAAMI,MACd,E,UCXD,EAAgC,mCAAhC,EAA6E,6B,UCMhEC,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXL,GAAWM,EAAAA,EAAAA,IAAYT,GA2B7B,OACE,gBAAKU,UAAWC,EAAhB,UACE,kBAAMC,SA3BW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACbC,EAAOF,EAAKG,SAASD,KACrBE,EAASJ,EAAKG,SAASC,OAE7B,GACEhB,EAASiB,MACP,SAAAC,GAAO,OACLA,EAAQJ,KAAKK,cAAcC,SAAWN,EAAKO,MAAMF,cAAcC,MAD1D,IAIT,OAAOE,MAAM,GAAD,OAAIR,EAAKO,MAAT,4BAEZ,IAAMH,EAAU,CACdJ,KAAMA,EAAKO,MACXL,OAAQA,EAAOK,MACfE,IAAIC,EAAAA,EAAAA,OAGNpB,GAASqB,EAAAA,EAAAA,IAAWP,IACpBN,EAAKc,OAER,EAIG,WACE,qCACA,kBACEC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,UAEd,uCACA,kBACEJ,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,mCAEd,mBAAQxB,UAAWC,EAAmBmB,KAAK,SAA3C,6BAMP,E,oBC9DD,GAAgB,YAAc,4BAA4B,QAAU,yBCGvDK,EAAS,WACpB,IAAM5B,GAAWC,EAAAA,EAAAA,MAOjB,OACE,iBAAKE,UAAWC,EAAAA,QAAhB,WACE,eAAID,UAAWC,EAAAA,YAAf,oCACA,kBACED,UAAWC,EAAAA,MACXmB,KAAK,OACLb,KAAK,SACLiB,YAAY,iBACZE,SAbY,SAAAvB,GAChB,IAAMR,EAASQ,EAAMwB,OAAOb,MAAMF,cAAcC,OAChDhB,GAAS+B,EAAAA,EAAAA,IAAUjC,GACpB,MAcF,ECvBD,EAA8B,iCAA9B,EAA2E,+BAA3E,EAAqH,8BAArH,EAAiK,iCCgBpJkC,EAAc,WACzB,IAAMpC,GAAWM,EAAAA,EAAAA,IAAYT,GAEvBwC,EAbmB,SAACnC,EAAQF,GAClC,OAAsB,IAAlBE,EAAOoC,OACFtC,EAEAA,EAASE,QAAO,SAAAgB,GAAO,OAC5BA,EAAQJ,KAAKK,cAAcoB,SAASrC,EADR,GAIjC,CAKyBsC,EADTlC,EAAAA,EAAAA,IAAYL,GACwBD,GAE7CI,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,eAAIE,UAAWC,EAAf,SACG6B,EAAgBI,KAAI,SAAAvB,GAAO,OAC1B,gBAAIX,UAAWC,EAA+B,UAASU,EAAQK,GAA/D,WACE,kBAAMhB,UAAWC,EAAjB,UACGU,EAAQJ,KADX,KACmBI,EAAQF,WAE3B,mBACE,UAASE,EAAQK,GAEjBhB,UAAWC,EACXmB,KAAK,SACLe,QAAS,WACPtC,GAASuC,EAAAA,EAAAA,IAAczB,EAAQK,IAChC,EAPH,mBAEOL,EAAQK,MANiBL,EAAQK,GADhB,OAqBnC,ECvBD,EAjBiB,WACf,IAAMnB,GAAWC,EAAAA,EAAAA,MAMjB,OAJAuC,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAGF,4BACE,SAACD,EAAD,KACA,SAAC6B,EAAD,KACA,SAACc,EAAA,EAAD,CAASjB,MAAM,WAAf,UACE,SAACO,EAAD,QAIP,C","sources":["redux/selectors.js","webpack://urszula-molska-goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://urszula-molska-goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://urszula-molska-goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getContacts = state => {\n  if (state === undefined) {\n    return;\n  }\n  return state.contacts.contacts;\n};\n\nexport const getFilter = state => {\n  if (state === undefined) {\n    return;\n  }\n  return state.filter;\n};\n\nexport const getError = state => state.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"addContactBtn\":\"ContactForm_addContactBtn__3KI6e\",\"wrapper\":\"ContactForm_wrapper__-Umw-\"};","import { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations.js';\nimport { getContacts } from '../../redux/selectors.js';\nimport { useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const name = form.elements.name;\n    const number = form.elements.number;\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() === name.value.toLowerCase().trim()\n      )\n    ) {\n      return alert(`${name.value} is already in contacts`);\n    } else {\n      const contact = {\n        name: name.value,\n        number: number.value,\n        id: nanoid(),\n      };\n\n      dispatch(addContact(contact));\n      form.reset();\n    }\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <form onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"name\"\n        />\n        <label>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"number in format: 325-152-154\"\n        />\n        <button className={css.addContactBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"titleFilter\":\"Filter_titleFilter__eRASS\",\"section\":\"Filter_section__SYoc3\"};","import { useDispatch } from 'react-redux';\nimport { addFilter } from '../../redux/filterSlice.js';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const setFilter = event => {\n    const filter = event.target.value.toLowerCase().trim();\n    dispatch(addFilter(filter));\n  };\n\n  return (\n    <div className={css.section}>\n      <h3 className={css.titleFilter}>Find contacts by name</h3>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"filter by name\"\n        onChange={setFilter}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"deleteBtn\":\"ContactList_deleteBtn__1dg25\",\"listItem\":\"ContactList_listItem__SptUx\",\"contactInfo\":\"ContactList_contactInfo__Sgq6p\"};","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations.js';\nimport { getContacts } from '../../redux/selectors.js';\nimport { getFilter } from '../../redux/selectors.js';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (filter, contacts) => {\n  if (filter.length === 0) {\n    return contacts;\n  } else {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const visibleContacts = getVisibleContacts(filter, contacts);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ul className={css.contactList}>\n        {visibleContacts.map(contact => (\n          <li className={css.listItem} key={contact.id} data-id={contact.id}>\n            <span className={css.contactInfo}>\n              {contact.name}: {contact.number}\n            </span>\n            <button\n              data-id={contact.id}\n              key={contact.id}\n              className={css.deleteBtn}\n              type=\"button\"\n              onClick={() => {\n                dispatch(deleteContact(contact.id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Section } from '../../components/Section/Section';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <Section title=\"Contacts\">\n        <ContactList />\n      </Section>\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["getContacts","state","undefined","contacts","getFilter","filter","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","event","preventDefault","form","currentTarget","name","elements","number","find","contact","toLowerCase","trim","value","alert","id","nanoid","addContact","reset","type","pattern","title","required","placeholder","Filter","onChange","target","addFilter","ContactList","visibleContacts","length","includes","getVisibleContacts","map","onClick","deleteContact","useEffect","fetchContacts","Section"],"sourceRoot":""}